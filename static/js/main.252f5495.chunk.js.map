{"version":3,"sources":["components/layout/Header.jsx","components/pages/Home.jsx","components/users/Users.jsx","components/users/Profile.jsx","components/users/UserView.jsx","actions/profile.action.js","components/users/UserCreate.jsx","components/MainRouter.jsx","components/layout/Main.jsx","App.js","serviceWorker.js","reducers/profile.reducer.js","store.js","index.js"],"names":["Header","props","react_default","a","createElement","className","NavLink","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Home","Profile","this","profiles","map","profile","key","name","contact","address","concat","Component","connect","state","ProfileView","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isLoaded","nextProps","selected_profile","console","log","history","push","match","params","setProfile","users_Profile","dispatch","payload","ProfileCreate","handleChange","e","setState","defineProperty","target","value","saveUser","preventDefault","addProfile","onSubmit","onChange","MainRouter","Switch","Route","path","component","exact","UsersList","UserCreate","UserView","Main","HashRouter","Fragment","layout_Header","components_MainRouter","App","layout_Main","Boolean","window","location","hostname","profileReducer","arguments","length","undefined","uuid","v4","action","objectSpread","toConsumableArray","find","createStore","combineReducers","applyMiddleware","createLogger","ReactDOM","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8QA0BeA,EAvBA,SAACC,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,gBAA1B,SACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBG,KAAK,SAASC,cAAY,WAAWC,cAAY,iBAAiBC,gBAAc,gBAAgBC,gBAAc,QAAQC,aAAW,qBAChKX,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BS,GAAG,iBACzCZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,SAASF,UAAU,YAA/B,8BCFTU,EATF,SAACd,GACV,OACIC,EAAAC,EAAAC,cAAA,mvCCDFY,mLAGE,OACId,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,kBAAkBE,GAAG,iBAAxC,UACAL,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,uBAGRF,EAAAC,EAAAC,cAAA,aAEKa,KAAKhB,MAAMiB,SAASC,IAAK,SAACC,GACvB,OACIlB,EAAAC,EAAAC,cAAA,MAAIiB,IAAKD,EAAQN,IACbZ,EAAAC,EAAAC,cAAA,UAAKgB,EAAQE,MACbpB,EAAAC,EAAAC,cAAA,UAAKgB,EAAQG,SACbrB,EAAAC,EAAAC,cAAA,UAAKgB,EAAQI,SACbtB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAE,UAAAkB,OAAYL,EAAQN,IAAMT,UAAU,0BAA/C,sBAzBlBqB,aA6CPC,cANU,SAACC,GACtB,MAAO,CACHV,SAAUU,EAAMR,QAAQF,WAIjBS,CAAyBX,GC9CxC,IAoBeA,EApBC,SAACf,GACb,OAEIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcJ,EAAMmB,QAAQE,OAE9CpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,YAA0CJ,EAAMmB,QAAQE,MACxDpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,YAA0CJ,EAAMmB,QAAQI,UAE5DtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,SAASF,UAAU,aAA/B,WCXVwB,cACF,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAd,KAAAY,IACTC,EAAAC,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAlB,QACKmB,UAAW,EAChBN,EAAKF,MAAQ,CACTR,QAAS,IAJJU,qFAQSO,GAClB,OAAKA,EAAUC,iBAKXrB,KAAKhB,MAAMqC,mBAAqBD,EAAUC,mBAC1CrB,KAAKmB,UAAW,EAChBG,QAAQC,IAAR,aAAAf,OAAyBR,KAAKmB,YACvB,IAPPnB,KAAKmB,UAAW,EAChBnB,KAAKhB,MAAMwC,QAAQC,KAAK,WACjB,+CAUI,IACR5B,EAAMG,KAAKhB,MAAM0C,MAAMC,OAAvB9B,GACPG,KAAKhB,MAAM4C,WAAW/B,oCAKtB,OACIZ,EAAAC,EAAAC,cAAA,WACKa,KAAKmB,SAAYlC,EAAAC,EAAAC,cAAC0C,EAAD,CAAS1B,QAASH,KAAKhB,MAAMqC,mBAA2BpC,EAAAC,EAAAC,cAAA,qCAhChEsB,aAuDVC,cAhBS,SAACC,GACtB,MAAO,CACHU,iBAAkBV,EAAMR,QAAQkB,iBAChCF,SAAUR,EAAMR,QAAQgB,WAIJ,SAACW,GACzB,MAAO,CACHF,WAAY,SAAC/B,GACTiC,EC9CD,CACHvC,KAAM,cACNwC,QD4CwBlC,OAMhBa,CAA6CE,WEtDvDoB,6MAGFC,aAAe,SAACC,GACZrB,EAAKsB,SAALrB,OAAAsB,EAAA,EAAAtB,CAAA,GACKoB,EAAEG,OAAOhC,KAAM,CAAC6B,EAAEG,OAAOC,YAKlCC,SAAW,SAACL,GACRA,EAAEM,iBACF3B,EAAK7B,MAAMyD,WAAW5B,EAAKF,OAC3BE,EAAK7B,MAAMwC,QAAQC,KAAK,mFAIxB,OACIxC,EAAAC,EAAAC,cAAA,QAAMuD,SAAU1C,KAAKuC,UACjBtD,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOH,UAAU,eAAgBiB,KAAK,OAAOsC,SAAW3C,KAAKiC,kBAKrFhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOH,UAAU,eAAgBiB,KAAK,UAAUsC,SAAU3C,KAAKiC,iBAGnFhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOH,UAAU,eAAgBiB,KAAK,UAAUsC,SAAU3C,KAAKiC,kBAIvFhD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBG,KAAK,UAAzC,UAzBJ,OA2BIN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,oBAAoBE,GAAG,UAA1C,kBA7CYmB,aAmEZC,cAdS,SAACC,GACtB,MAAO,CACHV,SAAUU,EAAMR,QAAQF,WAIJ,SAAC6B,GACzB,MAAO,CACHW,WAAY,SAACtC,GACT2B,EDpEL,SAAoB3B,GACvB,MAAO,CACHZ,KAAM,cACNwC,QAAS5B,GCiEIsC,CAAWtC,OAKhBO,CAA6CsB,GCnD9CY,mLAZP,OACI3D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,KACI5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWlD,EAAMmD,OAAK,IACtChE,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWlD,IAC/Bb,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWE,EAAWD,OAAK,IAChDhE,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAWG,EAAYF,OAAK,IACxDhE,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWI,YAR3B3C,aCeV4C,mLAfP,OACIpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,KACIrE,EAAAC,EAAAC,cAACF,EAAAC,EAAMqE,SAAP,KACItE,EAAAC,EAAAC,cAACqE,EAAD,MACAvE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACZH,EAAAC,EAAAC,cAACsE,EAAD,gBARLhD,aCWJiD,0LARX,OACEzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACwE,EAAD,cAJUlD,cCKEmD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrC,MACvB,gHCyDSsC,EAxEQ,WAuBT,IAvBUrD,EAuBVsD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAvBkB,CAC5B5C,iBAAkB,KAClBF,UAAU,EACVlB,SAAU,CACN,CACIJ,GAAIuE,IAAKC,KACThE,KAAM,WACNC,QAAS,cACTC,QAAS,qBAEb,CACIV,GAAIuE,IAAKC,KACThE,KAAM,cACNC,QAAS,cACTC,QAAS,qBAEb,CACIV,GAAIuE,IAAKC,KACThE,KAAM,aACNC,QAAS,cACTC,QAAS,uBAGlB+D,EAAWL,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACV,OAAQG,EAAO/E,MACX,IAAK,cACD,IAAIwC,EAAU,CACVlC,GAAIuE,IAAKC,KACThE,KAAMiE,EAAOvC,QAAQ1B,KACrBC,QAASgE,EAAOvC,QAAQzB,QACxBC,QAAS+D,EAAOvC,QAAQxB,SAE5BI,EAAKG,OAAAyD,EAAA,EAAAzD,CAAA,GACEH,EADF,CAEDV,SAAQ,GAAAO,OAAAM,OAAA0D,EAAA,EAAA1D,CACDH,EAAMV,UADL,CAEJ8B,MAGR,MACJ,IAAK,cAMD,IAAM5B,GALPQ,EAAKG,OAAAyD,EAAA,EAAAzD,CAAA,GACEH,EADF,CAEDQ,UAAS,EACTE,iBAAkB,QAECpB,SAASwE,KAAM,SAACtE,GAClC,OAAImE,EAAOvC,UAAY5B,EAAQN,GACpB,CACHA,GAAIM,EAAQN,GACZQ,KAAMF,EAAQE,KACdC,QAASH,EAAQG,QACjBC,QAASJ,EAAQI,SAGlB,OAGXI,EAAKG,OAAAyD,EAAA,EAAAzD,CAAA,GACEH,EADF,CAEDQ,UAAU,EACVE,iBAAkBlB,IAGtB,MACJ,QACK,OAAOQ,EAGhB,OAAOA,GCnEI+D,cACXC,YAAgB,CACZxE,YAEJ,GACAyE,YAAgBC,2BCDpBC,IAASC,OAAO9F,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAUC,MAAOA,GAAOhG,EAAAC,EAAAC,cAAC+F,EAAD,OAAoBC,SAASC,eAAe,SHwH9E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.252f5495.chunk.js","sourcesContent":["import React  from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n            <NavLink to=\"/\" className=\"navbar-brand\">MyApp</NavLink>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <NavLink to=\"/users\" className=\"nav-link\">Users</NavLink>\n                    </li>\n                    {/* <li className=\"nav-item\">\n                        <NavLink to=\"/inventory\" className=\"nav-link\">Inventory</NavLink>\n                    </li> */}\n                </ul>\n                \n            </div>\n        </nav>\n    );\n}\n\nexport default Header;","import React from 'react';\n\n\nconst Home = (props) => {\n    return (\n        <div>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis mattis pulvinar ligula, id tristique ligula ullamcorper non. Sed eget tempor orci, porttitor sodales dolor. Etiam sit amet est sem. Quisque dictum neque aliquet neque ornare, sed posuere dui consequat. Pellentesque id ante elit. Morbi interdum velit nec justo gravida, sed placerat orci commodo. Ut a dictum felis, elementum pulvinar justo. Quisque magna erat, lacinia ac turpis ac, cursus condimentum neque. Sed vel dolor efficitur leo rhoncus scelerisque. Vestibulum at ipsum mattis, scelerisque massa ut, scelerisque arcu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\n            Nam elementum congue vulputate. In tempus ac turpis fermentum mollis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In hac habitasse platea dictumst. Nullam gravida mi at tortor efficitur elementum. Praesent massa sem, condimentum a elit vel, congue ultricies quam. Integer sodales arcu vehicula vulputate pulvinar. Nullam quis neque augue. Sed rhoncus accumsan justo, nec ullamcorper quam auctor ac. Nullam venenatis ut risus ut faucibus. Nullam gravida libero vitae scelerisque mollis. Vivamus hendrerit sapien non nunc pharetra, eu semper risus molestie.\n            </div>\n    );\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass Profile extends Component {\n\n    render() {\n        return (\n            <div className=\"col-md-12\">\n                <NavLink className=\"btn btn-primary\" to=\"/users/create\">Create</NavLink>\n                <br/><br/>\n                <table className=\"table \">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Contact No</th>\n                            <th>Address</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                     {\n                         this.props.profiles.map( (profile) => {\n                            return (\n                                <tr key={profile.id}>\n                                    <td>{profile.name}</td>\n                                    <td>{profile.contact}</td>\n                                    <td>{profile.address}</td>\n                                    <td>\n                                        <NavLink to={`/users/${profile.id}`} className=\"btn btn-primary btn-sm\">View</NavLink>\n                                    </td>\n                                </tr>\n                            );\n                         })\n                     }       \n                    </tbody>\n                </table>\n                \n            </div>\n        )\n    }\n}\n\nconst  mapStateToProps = (state) => {\n    return {\n        profiles: state.profile.profiles\n    }\n}\n\nexport default connect(mapStateToProps)(Profile);","import React from 'react';\nimport {NavLink} from 'react-router-dom'\n\nconst Profile = (props) => {\n    return (\n        \n        <div className=\"card\">\n            \n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{props.profile.name}</h5>\n            </div>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item\">Contact: {props.profile.name}</li>\n                <li className=\"list-group-item\">Address: {props.profile.address}</li>\n            </ul>\n            <div className=\"card-body\">\n                <NavLink to=\"/users\" className=\"card-link\">Back</NavLink>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Profile;","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { setProfile } from '../../actions/profile.action';\nimport Profile from './Profile'\n\nclass ProfileView extends Component {\n    constructor(){\n        super();\n        this.isLoaded = false;\n        this.state = {\n            profile: {}\n        }\n    }\n    \n    shouldComponentUpdate(nextProps){\n        if (!nextProps.selected_profile) {\n            this.isLoaded = false;\n            this.props.history.push('/users');\n            return true;\n        }\n        if (this.props.selected_profile !== nextProps.selected_profile){\n            this.isLoaded = true;\n            console.log(`isLoaded: ${this.isLoaded}`)\n            return true\n        }\n        return false\n    }\n\n    componentDidMount(){\n        const {id} = this.props.match.params;\n        this.props.setProfile(id);\n        \n    }\n\n    render() {\n        return (\n            <div>\n                {this.isLoaded ? (<Profile profile={this.props.selected_profile} />  ) : (<h1>Loading Profile</h1>)}\n                             \n            </div>\n        )\n    }\n}\n\nconst  mapStateToProps = (state) => {\n    return {\n        selected_profile: state.profile.selected_profile,\n        isLoaded: state.profile.isLoaded\n    }\n}\n\nconst  mapDispatchToProps = (dispatch) => {\n    return {\n        setProfile: (id) => {\n            dispatch(setProfile(id));\n        }\n    }\n}\n\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(ProfileView)","export function addProfile(profile){\n    return {\n        type: \"ADD_PROFILE\",\n        payload: profile\n    }\n}\n\nexport function setProfile(profile_id){\n    return {\n        type: \"SET_PROFILE\",\n        payload: profile_id\n    }\n}","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addProfile } from '../../actions/profile.action';\n\n\nclass ProfileCreate extends Component {\n\n\n    handleChange = (e) => {\n        this.setState({ \n            [e.target.name]:[e.target.value] \n        });\n        \n    }\n\n    saveUser = (e) => {\n        e.preventDefault();\n        this.props.addProfile(this.state);\n        this.props.history.push('/users');\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.saveUser}>\n                <h1>Create New Profile</h1>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"form-group\">\n                            <label>Name</label>\n                            <input type=\"text\" className=\"form-control\"  name=\"name\" onChange={ this.handleChange } />\n                        </div>\n                    \n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                            <label>Contact No.</label>\n                            <input type=\"text\" className=\"form-control\"  name=\"contact\" onChange={this.handleChange} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-8\">\n                        <div className=\"form-group\">\n                            <label>Address</label>\n                            <input type=\"text\" className=\"form-control\"  name=\"address\" onChange={this.handleChange} />\n                        </div>\n                    </div>\n                </div>\n                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n                &nbsp; \n                <NavLink className=\"btn btn-secondary\" to=\"/users\">Cancel</NavLink>\n            </form>\n\n        \n        )\n    }\n}\n\nconst  mapStateToProps = (state) => {\n    return {\n        profiles: state.profile.profiles\n    }\n}\n\nconst  mapDispatchToProps = (dispatch) => {\n    return {\n        addProfile: (profile) => {\n            dispatch(addProfile(profile));\n        }\n    }\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(ProfileCreate);","import React, {Component} from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home'\nimport UsersList from './users/Users';\nimport UserView from './users/UserView';\nimport UserCreate from './users/UserCreate';\n\nclass MainRouter extends Component {\n    render () {\n        return (\n            <Switch>\n                <Route path=\"/\" component={Home} exact />\n                <Route path=\"/home\" component={Home} />\n                <Route path=\"/users\" component={UsersList} exact />\n                <Route path=\"/users/create\" component={UserCreate} exact />\n                <Route path=\"/users/:id\" component={UserView} />\n            </Switch>\n        );\n    }\n}\n\nexport default MainRouter;","import React, { Component } from 'react'\nimport { HashRouter as Router} from 'react-router-dom';\nimport Header from './Header'\nimport MainRouter from '../MainRouter';\n\n\nclass Main extends Component {\n    render() {\n        return (\n            <Router>\n                <React.Fragment>\n                    <Header/>\n                    <br/>\n                    <main className=\"container\">\n                        <MainRouter/>\n                    </main>\n                </React.Fragment>\n\n            </Router>\n        );\n    }\n}\n\nexport default Main","import React, { Component } from 'react';\n\nimport Main from './components/layout/Main';\nimport './assets/css/bootstrap.min.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import uuid from 'uuid';\n\n\nconst profileReducer = (state = {\n    selected_profile: null,\n    isLoaded: false,\n    profiles: [\n        {\n            id: uuid.v4(),\n            name: \"Jon Snow\",\n            contact: \"09123456789\",\n            address: \"Winterfell Castle\"\n        },\n        {\n            id: uuid.v4(),\n            name: \"Sansa Stark\",\n            contact: \"09123456789\",\n            address: \"Winterfell Castle\"\n        },\n        {\n            id: uuid.v4(),\n            name: \"Arya Stark\",\n            contact: \"09123456789\",\n            address: \"Winterfell Castle\"\n        }\n    ]\n}, action) => {\n    switch (action.type) {\n        case \"ADD_PROFILE\":\n            let payload = {\n                id: uuid.v4(),\n                name: action.payload.name,\n                contact: action.payload.contact,\n                address: action.payload.address\n            }\n            state = {\n                ...state,\n                profiles: [\n                    ...state.profiles,\n                    payload\n                ]\n            }\n            break;\n        case \"SET_PROFILE\":\n           state = {\n               ...state,\n               isLoaded:false,\n               selected_profile: null\n           }\n            const profile = state.profiles.find( (profile) => {\n                if (action.payload === profile.id) {\n                    return {\n                        id: profile.id,\n                        name: profile.name,\n                        contact: profile.contact,\n                        address: profile.address\n                    };\n                }\n                return null;\n            });\n            \n            state = {\n                ...state,\n                isLoaded: true,\n                selected_profile: profile\n            };\n            \n            break;\n        default:\n             return state\n    }\n    \n    return state;\n};\n\nexport default profileReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\n\nimport profile from './reducers/profile.reducer'\n\nexport default createStore(\n    combineReducers({\n        profile\n    }),\n    {},\n    applyMiddleware(createLogger())\n ) ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}